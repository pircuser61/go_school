// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/modules/": {
            "get": {
                "description": "Список блоков",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get list of modules",
                "operationId": "get-modules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusFunctionList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/modules/usage": {
            "get": {
                "description": "Блоки и сценарии, в которых они используются",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get list of modules usage",
                "operationId": "modules-usage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.AllUsageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/modules/{moduleName}/usage": {
            "get": {
                "description": "Сценарии, в которых используется блок",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Usage of module in pipelines",
                "operationId": "module-usage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "module name",
                        "name": "moduleName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.UsageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/pipelines/": {
            "get": {
                "description": "Список сценариев",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline"
                ],
                "summary": "Get list of pipelines",
                "operationId": "list-pipelines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenarioList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создать новый сценарий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline"
                ],
                "summary": "Create pipeline",
                "operationId": "create-pipeline",
                "parameters": [
                    {
                        "description": "New scenario",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EriusScenario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenario"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/pipelines/version": {
            "put": {
                "description": "Изменить черновик",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline"
                ],
                "summary": "Edit Draft",
                "operationId": "edit-draft",
                "parameters": [
                    {
                        "description": "New draft",
                        "name": "draft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EriusScenario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenario"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/pipelines/version/{pipelineID}": {
            "post": {
                "description": "Создать новую версию сценария",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline",
                    "version"
                ],
                "summary": "Create pipeline version",
                "operationId": "create-version",
                "parameters": [
                    {
                        "description": "New version",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EriusScenario"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pipeline ID",
                        "name": "pipelineID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenario"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удалить сценарий",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline"
                ],
                "summary": "Delete Pipeline",
                "operationId": "delete-pipeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID",
                        "name": "pipelineID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/pipelines/version/{versionID}": {
            "get": {
                "description": "Получить версию сценария по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline",
                    "version"
                ],
                "summary": "Get pipeline version",
                "operationId": "get-version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenario"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удалить версию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Delete Version",
                "operationId": "delete-version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/pipelines/{pipelineID}": {
            "get": {
                "description": "Получить сценарий по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline"
                ],
                "summary": "Get pipeline",
                "operationId": "get-pipeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ID",
                        "name": "pipelineID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.EriusScenario"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/run/version/{versionID}": {
            "post": {
                "description": "Запустить версию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version",
                    "run"
                ],
                "summary": "Run Version",
                "operationId": "run-version",
                "parameters": [
                    {
                        "description": "pipeline input",
                        "name": "variables",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.RunResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        },
        "/run/{pipelineID}": {
            "post": {
                "description": "Запустить сценарий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipeline",
                    "run"
                ],
                "summary": "Run Pipeline",
                "operationId": "run-pipeline",
                "parameters": [
                    {
                        "description": "pipeline input",
                        "name": "variables",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pipeline ID",
                        "name": "pipelineID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.httpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.RunResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Err",
                        "schema": {
                            "$ref": "#/definitions/handlers.httpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.AllUsageResponse": {
            "type": "object",
            "properties": {
                "pipelines": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "entity.EriusFunc": {
            "type": "object",
            "properties": {
                "block_type": {
                    "type": "string",
                    "enum": [
                        "python3",
                        "internal",
                        "term",
                        "scenario"
                    ],
                    "example": "python3"
                },
                "final": {
                    "type": "string"
                },
                "input": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusFunctionValue"
                    }
                },
                "next": {
                    "type": "string",
                    "example": "send-data_0"
                },
                "on_false": {
                    "type": "string"
                },
                "on_iter": {
                    "type": "string"
                },
                "on_true": {
                    "type": "string"
                },
                "output": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusFunctionValue"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "lock-bts"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "entity.EriusFunctionList": {
            "type": "object",
            "properties": {
                "funcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/script.FunctionModel"
                    }
                },
                "shapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/script.ShapeEntity"
                    }
                }
            }
        },
        "entity.EriusFunctionValue": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "string",
                    "example": "block.some_data"
                },
                "name": {
                    "type": "string",
                    "example": "some_data"
                },
                "type": {
                    "type": "string",
                    "example": "string"
                }
            }
        },
        "entity.EriusScenario": {
            "type": "object",
            "properties": {
                "hasDraft": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                },
                "input": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusFunctionValue"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "ScenarioName"
                },
                "output": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusFunctionValue"
                    }
                },
                "pipeline": {
                    "type": "object",
                    "properties": {
                        "blocks": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/entity.EriusFunc"
                            }
                        },
                        "entrypoint": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "description": "1 - Draft, 2 - Approved, 3 - Deleted, 4 - Rejected, 5 - On Approve",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "version_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                }
            }
        },
        "entity.EriusScenarioInfo": {
            "type": "object",
            "properties": {
                "approved_at": {
                    "type": "string",
                    "example": "2020-07-16T17:10:25.112704+03:00"
                },
                "approver": {
                    "type": "string",
                    "example": "testApprover"
                },
                "author": {
                    "type": "string",
                    "example": "testAuthor"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-07-16T17:10:25.112704+03:00"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                },
                "last_run": {
                    "type": "string",
                    "example": "2020-07-16T17:10:25.112704+03:00"
                },
                "last_run_status": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "ScenarioName"
                },
                "status": {
                    "description": "1 - Draft, 2 - Approved, 3 - Deleted, 4 - Rejected, 5 - On Approve",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                }
            }
        },
        "entity.EriusScenarioList": {
            "type": "object",
            "properties": {
                "drafts": {
                    "description": "Черновики",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusScenarioInfo"
                    }
                },
                "on_approve": {
                    "description": "Сценарии на одобрении",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusScenarioInfo"
                    }
                },
                "pipelines": {
                    "description": "Согласованные сценарии",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusScenarioInfo"
                    }
                },
                "tags": {
                    "description": "Теги",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EriusTagInfo"
                    }
                }
            }
        },
        "entity.EriusTagInfo": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.RunResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "output": {
                    "type": "object"
                },
                "pipeline_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                },
                "status": {
                    "type": "string",
                    "example": "runned"
                },
                "task_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "916ad995-8d13-49fb-82ee-edd4f97649e2"
                }
            }
        },
        "entity.UsageResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Имя блока",
                    "type": "string"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.UsedBy"
                    }
                },
                "used": {
                    "type": "boolean"
                }
            }
        },
        "entity.UsedBy": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID сценария",
                    "type": "string"
                },
                "name": {
                    "description": "Имя сценария",
                    "type": "string"
                }
            }
        },
        "handlers.httpError": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "handlers.httpResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "script.FunctionModel": {
            "type": "object",
            "properties": {
                "block_type": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/script.FunctionValueModel"
                    }
                },
                "next_funcs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/script.FunctionValueModel"
                    }
                },
                "shape_type": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "script.FunctionValueModel": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "script.ShapeEntity": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "localhost:8181",
	BasePath:    "/api/pipeliner/v1",
	Schemes:     []string{},
	Title:       "Pipeliner API",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
