tracing:
  url: 'http://jaeger-prod-collector.observability:14268/api/traces'
  sample_fraction: 1.0

serve_addr: ':8000'
probes:
  liveness: "/alive"
  readiness: "/ready"
timeout: '30s'
faas: 'https://openfaas.dev.autobp.mts.ru/'
scheduler: "http://scheduler"
network_monitor: "http://network-monitor/api/netmon/v1/"
consumer_funcs_workers: 10
consumer_tasks_workers: 10

services_ping:
  ping_timer: 3s
  max_failed_count: 3
  max_ok_count: 3

people:
  url: "https://dev.iga.mts.ru/api/archivist/v2"
  cache:
    type: "default"
    address: ""
    db: 0
    pass: ""
    ttl: "1s"

database:
  kind: postgres
  host: localhost
  port: 5432
  user_env_key: "DB_USER"
  pass_env_key: "DB_PASS"
  dbname: 'pipeliner'
  max_connections: 50
  timeout: 10

sso:
  address: "https://isso-dev.mts.ru"
  client_secret_env_key: "SSO_SECRET"
  client_id: "jocasta-dev"
  realm: "mts"
  access_cookie_name: "kc-access"

mail:
  broker: "redis"
  host: "localhost"
  port: 6379
  queue: "mail"
  database: "0"
  from:
    name: "Service Desk"
    email: "servicedesk_noreply@mts.ru"
  sd_address: "https://dev.servicedesk.mts.ru"
  read_timeout: '10s'
  write_timeout: '25s'

kafka:
  brokers:
    - 11.217.103.83:9094
  producer_topic_sd: "from.pipeliner.to.sd"
  producer_topic: "from.pipeliner.to.runner"
  consumer_group_functions:  "pipeliner-function-local2"
  consumer_group_task_runner: "pipeliner-tasks-local2"
  consumer_functions_topic: "from.runner.to.pipeliner-local"
  consumer_task_runner_topic: "from.pipeline-runner.to.pipeliner-local"
  health_check_timeout: 30
  function_message_resend_delay: 10s
  cache:
    type: "default"
    address: ""
    db: 0
    pass: ""
    ttl: "1s"

remedy: "http://remedy"

swagger:
  base_path: '/api/pipeliner/v1'
  version: '0.1'
  host: 'dev.jocasta.mts-corp.ru'
  port: ''

http_client_config:
  timeout: '80s'
  keep_alive: '30s'
  max_idle_conns: 10000
  idle_conn_timeout: '80s'
  tls_handshake_timeout: '10s'
  expect_continue_timeout: '1s'
  proxy_url: ''

monitoring:
  addr: 'http://monitoring:9000/api/monitoring/v1/pipeliner'
  timeout: '5s'

prometheus:
  stand: 'dev'
  push:
    url: 'http://openfaas-prometheus-pushgateway.openfaas:9091'
    job: 'pipeliner'

log:
  title: 'pipeliner'
  output: 'stdout'
  formatter: 'json'
  level: 'trace'
  hooks:
    filename:
      sourceField: 'sourcelog'

log_index: 'jocasta-dev-jocasta-dev-ocean-0000-s1-k8s-cmn-inside-01'

servicedesc:
  servicedesk_url: "https://dev.servicedesk.mts.ru"
  scope: "servicedesk-develop-aud"
  cache:
    type: "default"
    address: ""
    db: 0
    pass: ""
    ttl: 1s

function_store:
  url: 'functions:90'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

scheduler_tasks:
  url: 'localhost:9001'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

sequence:
  url: 'localhost:9002'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

human_tasks:
  url: "human-tasks:90"
  max_retries: 3
  retry_delay: 1s
  timeout: 2s
  cache:
    type: "default"
    address: ""
    db: 0
    pass: ""
    ttl: 1s

imap:
  imap_connection: "mail.inside.mts.ru:993"
  imap_user_name: "dev_servicedeskmail@mts.ru"
  imap_password: "IMAP_PASSWORD"
  imap_mail_box: "Inbox"

integrations:
  url: 'integrations:90'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

forms:
  url: 'forms:90'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

hrgate:
  hr_gate_url: "https://hr-gate.stage.autobp.mts.ru"
  scope: "hr-gate"
  cache:
    type: "default"
    address: ""
    db: 0
    pass: ""
    ttl: 1s

minio:
  addr: "minio:9000"
  access_env_key: "ACCESS_KEY"
  secret_access_env_key: "SECRET_ACCESS_KEY"
  use_ssl: False
  bucket_name: "jocasta-attachments"

file_registry:
  rest: 'file-registry:8000'
  grpc: 'file-registry:90'
  max_retries: 3
  retry_delay: 1s
  timeout: 2s

host_url: 'https://dev.ap.mts.ru'